1.


var isEqualsJson = (obj1,obj2)=>{
    keys1 = Object.keys(obj1);
    keys2 = Object.keys(obj2);

    //return true when the two json has same length and all the properties has same value key by key
    return keys1.length === keys2.length && Object.keys(obj1).every(key=>obj1[key]==obj2[key]);
}

var obj1 = {name:"person 1",age:5};
var obj2 = {age:5,name:"person 1"}; 

console.log("json is equals: "+ isEqualsJson(obj1,obj2));
//alert("json is equals: "+ isEqualsJson(obj1,obj2));


step 1
first we will compare the objects

step 2
if both the objects are same it will display true

or else

it will diplay 

false

2.

<html>

<head>
    <title>XML HTTP Request Example</title>
    <link rel="stylesheet" href="style.css">

</head>

<body>
    This is for XML parsing

    <script>
        // Creating an XMLHttpRequest object
        const xhr = new XMLHttpRequest();

        // Define the URL to which the request will be sent
        const url = 'https://restcountries.com/v3.1/all'; // Replace with your API endpoint

        // This function is called whenever the state of the XMLHttpRequest changes
        xhr.onreadystatechange = function () {
            // XMLHttpRequest.DONE means the operation is complete
            if (xhr.readyState === XMLHttpRequest.DONE) {
                // Check if the request was successful (status code 200)
                if (xhr.status === 200) {
                    // Parse the JSON response
                    const response = JSON.parse(xhr.responseText);
                    // Call a function to display the data
                    console.log(response);

                } else {
                    // Log an error message if the request fails
                    console.error('There was a problem with the request.');
                }
            }
        };

        // Open a connection with the server
        xhr.open('GET', url, true); // Parameters: method, URL, asynchronous (true/false)

        // Send the request
        xhr.send(); // For POST requests, you can pass data as an argument to send()
        var result=JSON.parse(request.response);
    
    </script>
</body>

</html>


3.


<html>

<head>
    <title>XML HTTP Request Example</title>
    <link rel="stylesheet" href="style.css">

</head>

<body>
    This is for XML parsing

    <script>
        // Creating an XMLHttpRequest object
        const xhr = new XMLHttpRequest();

        // Define the URL to which the request will be sent
        const url = 'https://restcountries.com/v3.1/all'; // Replace with your API endpoint

        // This function is called whenever the state of the XMLHttpRequest changes
        xhr.onreadystatechange = function () {
            // XMLHttpRequest.DONE means the operation is complete
            if (xhr.readyState === XMLHttpRequest.DONE) {
                // Check if the request was successful (status code 200)
                if (xhr.status === 200) {
                    // Parse the JSON response
                    const response = JSON.parse(xhr.responseText);
                    // Call a function to display the data
                    console.log(response);

                } else {
                    // Log an error message if the request fails
                    console.error('There was a problem with the request.');
                }
            }
        };

        // Open a connection with the server
        xhr.open('GET', url, true); // Parameters: method, URL, asynchronous (true/false)

        // Send the request
        xhr.send(); // For POST requests, you can pass data as an argument to send()
        var result=JSON.parse(request.response);
    for(let i = 0 ; i< result.length ; i++){
        console.log(result[i].name);
        console.log(result[i].region);
        console.log(result[i].subregion); 
        console.log(result[i].population); 
    }
    </script>
</body>

</html>
